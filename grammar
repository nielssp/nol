
Program ::= {Import} {Definition}

Import ::= "import" string

Definition ::= "let" Assign

Assign ::= name "=" Expr

Expr ::= LetExpr
       | IfExpr
       | LambdaExpr

LetExpr ::= "let" Assign {"," Assign} "in" Expr

IfExpr ::= "if" Expr "then" Expr "else" Expr

LambdaExpr ::= "\" name {name} "->" Expr
             | InfixExpr

InfixExpr ::= PrefixExpr n_infix LambdaExpr
            | PrefixExpr

PrefixExpr ::= PrefixExpr Atom
             | Atom

Atom ::= "(" n_infix ")"
       | "(" Expr ")"
       | List
       | name
       | literal

List ::= "[" {Atom} "]"

literal ::= int
          | float
          | string
